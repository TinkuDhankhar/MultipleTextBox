@model Test.Models.Employ

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CID, new SelectList(Model.CountryList, "CID", "Name"), "Select One", new { @class = "form-control", onchange = "bindState()" })
                @Html.ValidationMessageFor(model => model.CID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SID, new SelectList(string.Empty, "", ""), "Select One", new { @class = "form-control", onchange = "bindCity()" })
                @Html.ValidationMessageFor(model => model.SID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CTID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CTID, new SelectList(string.Empty, "", ""), "Select One", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CTID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ProfilePic, new { @class = "form-control", @type = "file" })
                @Html.ValidationMessageFor(model => model.ProfilePic, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Resume, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Resume, new { @class = "form-control", @type = "file" })
                @Html.ValidationMessageFor(model => model.Resume, "", new { @class = "text-danger" })
            </div>
        </div>
        <fieldset>
            <legend>Employe Qualification</legend>

            <div class="row" id="Quali">
                <div class="form-group">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.QName, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.TextBoxFor(model => model.QName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.QName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.Qupload, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.TextBoxFor(model => model.Qupload, new { @class = "form-control", @type = "file" })
                        @Html.ValidationMessageFor(model => model.Qupload, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        <input type="button" name="name" value="Add" class="btn btn-success" onclick="appandText()" />
                    </div>
                </div>
            </div>
        </fieldset>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function bindState() {
            var id = $("#CID option:selected").val();
            $.ajax({
                url: "/Home/BindState",
                type: "GET",
                data: { id: id },
                success: function (result) {
                    for (var i = 0; i < result.length; i++) {
                        $("#SID").append('<option value=' + result[i].SID + '>' + result[i].Name + '</option>')
                    }
                }
            })
        }
        function bindCity() {
            var id = $("#SID option:selected").val();
            $.ajax({
                url: "/Home/BindCity",
                type: "GET",
                data: { id: id },
                success: function (result) {
                    for (var i = 0; i < result.length; i++) {
                        $("#CTID").append('<option value=' + result[i].CID + '>' + result[i].Name + '</option>')
                    }
                }
            })
        }
        function appandText() {
            $("#Quali").append("<div class='form-group'><div class='col-md-5'><label class='col-md-2'>QName</label><input type='text'id='QName' name='QName'class='form-control'/></div><div class='col-md-5'><label class='col-md-2'>Qupload</label><input type='file'id='Qupload' name='Qupload'class='form-control'/></div><div class='col-md-2'><input type='button' name='name' value='Add' class='btn btn-success' onclick='appandText()' /><input type='button' name='remove' value='Remove' class='btn btn-danger' onclick='removeText()' /></div></div>");
        }
        function removeText() {
            $("#Quali").children().last().remove();
        }
    </script>
}